name: CI on Xamarin Android project

on: push

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Android Signin
        run: |
          echo "${{ secrets.KEYSTORE }}" > flensakeystore.keystore.asc
          gpg -d --passphrase "${{ secrets.GPG_PASSWORD }}" --batch flensakeystore.keystore.asc > ./FlensaApp/FlensaApp.Android/flensakeystore.keystore

      - name: Update Android version Manifest action
        uses: damienaicheh/update-android-version-manifest-action@v1.0.0
        with:
          android-manifest-path: './FlensaApp/FlensaApp.Android/Properties/AndroidManifest.xml'
          version-code: ${{ github.run_number }}
          version-name: ${{ secrets.APP_VERSION }}
          print-file: true
          

      - name: Setup NuGet.Config
        run: echo '<configuration><packageSources><add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" /></packageSources></configuration>' > ~/.config/NuGet/NuGet.Config
      
      - name: Set default Xamarin SDK versions
        run: |
          $VM_ASSETS/select-xamarin-sdk-v2.sh --mono=6.12 --android=12.2

      - name: Setup .NET Core SDK 5.0.x
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '5.0.x'

      - name: Android
        run: |
          nuget restore
          cd FlensaApp
          cd FlensaApp.Android
          msbuild /t:SignAndroidPackage /p:Configuration=Release /p:AndroidPackageFormat=apk /p:AndroidKeyStore=true /p:AndroidSigningKeyAlias=flensakeystore /p:AndroidSigningKeyPass='${{ secrets.KEYSTORE_PASSWORD }}' /p:AndroidSigningKeyStore=flensakeystore.keystore /p:AndroidSigningStorePass='${{ secrets.KEYSTORE_PASSWORD }}' FlensaApp.Android.csproj

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          name: Flensa App
          path: FlensaApp/FlensaApp.Android/bin/Release/com.companyname.flensaapp-Signed.apk
      
      - name: Setup App Center CLI
        run: npm install --location=global appcenter-cli
        
      - name: Upload Android App to App Center
        run: appcenter distribute release --file ./FlensaApp/FlensaApp.Android/bin/Release/com.companyname.flensaapp-Signed.apk --app icebeam/Flensa-App --group Collaborators --token ${{ secrets.APP_CENTER_TOKEN }}


